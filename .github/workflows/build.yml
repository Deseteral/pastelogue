name: Build

on: [push]

jobs:
  Build:
    strategy:
      matrix:
        # os: [macOS-10.14, ubuntu-latest, windows-latest]
        os: [windows-latest]
        rust: [stable]
        # rust: [stable, nightly]
    runs-on: ${{ matrix.os }}
    steps:
    # MacOS setup
    - name: '[MacOS] Update homebrew'
      if: matrix.os == 'macOS-10.14'
      run: brew update
    - name: '[MacOS] Install pkg-config from brew'
      if: matrix.os == 'macOS-10.14'
      run: brew install pkg-config && export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
    - name: '[MacOS] Install gexiv2 from brew'
      if: matrix.os == 'macOS-10.14'
      run: brew install gexiv2

    # Linux setup
    - name: '[Linux] Update apt'
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update
    - name: '[Linux] Install gexiv2 from apt'
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libgexiv2-dev

    # Windows setup
    - name: '[Windows] Install meson'
      if: matrix.os == 'windows-latest'
      run: pip install meson
    - name: '[Windows] Install ninja'
      if: matrix.os == 'windows-latest'
      run: mkdir ninja-build ; (new-object net.webclient).DownloadFile('https://github.com/mesonbuild/cidata/raw/master/ninja.exe', '.\ninja.exe')
    - name: '[Windows] Clone gexiv2'
      if: matrix.os == 'windows-latest'
      run: git clone https://gitlab.gnome.org/GNOME/gexiv2
    - name: '[Windows] Build gexiv2'
      if: matrix.os == 'windows-latest'
      run: cd gexiv2 ; meson build ; & '..\ninja.exe' -C build ; & '..\ninja.exe' -C build install

    # Build and test
    - uses: actions/checkout@v1
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.rust }}
          override: true
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
